name: Build and Release

on:
  push:
    branches:
      - master 

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '21'  

      - name: Build with Maven
        run: mvn -B package --file pom.xml  

      - name: Get the latest tag
        id: get_tag
        run: |
          LATEST_TAG=$(git describe --tags --abbrev=0 || echo "v0.0.0")
          echo "Latest tag: $LATEST_TAG"
          echo "::set-output name=latest_tag::$LATEST_TAG"

      - name: Bump the version number
        id: bump_version
        run: |
          version="${{ steps.get_tag.outputs.latest_tag }}"
          major=$(echo $version | cut -d. -f1 | cut -dv -f2)
          minor=$(echo $version | cut -d. -f2)
          patch=$(echo $version | cut -d. -f3)
          new_version="v$major.$minor.$((patch+1))"
          echo "New version is $new_version"
          echo "::set-output name=new_version::$new_version"

      - name: Create new tag
        run: |
          git tag ${{ steps.bump_version.outputs.new_version }}
          git push origin ${{ steps.bump_version.outputs.new_version }}

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Ensure this token is configured
        with:
          tag_name: ${{ steps.bump_version.outputs.new_version }}  # Use the new version as the tag
          name: Release ${{ steps.bump_version.outputs.new_version }}
          body: ${{ github.event.head_commit.message }}  # Commit message as the release body
          files: target/*.jar
